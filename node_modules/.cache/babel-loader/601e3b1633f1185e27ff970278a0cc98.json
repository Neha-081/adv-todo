{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Git/adv-todo/src/components/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./todo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = () => {\n  _s();\n\n  const [todoInput, setTodoInput] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n  const [todoList, setTodoList] = useState([{\n    count: null,\n    text: \"Neha\",\n    date: \"2022-01-01\",\n    time: \"00:00\",\n    del: \"X\",\n    checked: false\n  }]);\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [count, setCount] = useState(1);\n\n  const handleClick = () => {\n    if (!date || !time) {\n      alert(\"Enter date and time\");\n      return;\n    }\n\n    if (!todoInput) {\n      alert(\"Enter something/Item already Exist\");\n      return;\n    } else {\n      setTodoList([...todoList, {\n        text: todoInput,\n        date,\n        time,\n        count,\n        del: \"X\",\n        checked\n      }]);\n      setCount(count + 1);\n      setTodoInput(\"\");\n    }\n  };\n\n  const handleDelete = id => {\n    const filtered = todoList.filter(item => item.count != id);\n    setTodoList(filtered);\n  };\n\n  const handleClear = () => {\n    setTodoList([{\n      text: \"\",\n      date: \"\",\n      time: \"\",\n      count: \"\",\n      del: \"\"\n    }]);\n  };\n\n  const handleCheck = (e, id) => {\n    console.log(id);\n    console.log(todoList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Todo Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        autoFocus: true,\n        placeholder: \"Enter Todo...\",\n        onChange: e => setTodoInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        onChange: e => setTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"btn btn-success\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: todoList.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"bullet\",\n              children: \"\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"check\",\n                value: checked,\n                onChange: e => console.log(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 41\n              }, this), checked ? \"Completed\" : \"Incomplete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                cursor: \"pointer\"\n              },\n              onClick: () => handleDelete(item.count),\n              className: \"del\",\n              children: item.del\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this)]\n          }, item.count, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      className: \"btn btn-primary\",\n      children: \"Clear All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Todo, \"ngVPAqc1gnqkSaKJQOlt5p+L/yI=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/home/Desktop/Git/adv-todo/src/components/Todo.jsx"],"names":["React","useState","Todo","todoInput","setTodoInput","checked","setChecked","todoList","setTodoList","count","text","date","time","del","setDate","setTime","setCount","handleClick","alert","handleDelete","id","filtered","filter","item","handleClear","handleCheck","e","console","log","target","value","map","cursor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./todo.css\"\n\nconst Todo = () => {\n    const [todoInput, setTodoInput] = useState(\"\")\n    const [checked,setChecked]=useState(false)\n    const [todoList, setTodoList] = useState([\n        {   count:null,\n            text: \"Neha\",\n            date: \"2022-01-01\",\n            time: \"00:00\",\n            del:\"X\",\n            checked:false\n\n        }\n    ])\n    const [date, setDate] = useState(\"\")\n    const [time, setTime] = useState(\"\")\n    const [count,setCount]=useState(1)\n\n    const handleClick = () => {\n        \n     if(!date || !time){\n         alert(\"Enter date and time\")\n         return\n     }\n        if (!todoInput ) {\n            alert(\"Enter something/Item already Exist\")\n            return\n        } else {\n           \n            setTodoList([...todoList, {\n                text: todoInput,\n                date,\n                time,\n                count,\n                del:\"X\",\n                checked\n                \n\n\n\n\n            }])\n           \n            setCount(count+1)\n            setTodoInput(\"\")\n        }\n    }\n\n    const handleDelete=(id)=>{\n        const filtered=todoList.filter(item=>item.count!=id)\n       setTodoList(filtered)\n       \n\n    }\n    const handleClear=()=>{\n        setTodoList([ {\n            text: \"\",\n            date:\"\",\n            time:\"\",\n            count:\"\",\n            del:\"\"\n\n        }])\n    }\n  \n    const handleCheck=(e,id)=>{\n        console.log(id);\n\n     console.log(todoList);\n\n       \n  \n        \n    }\n\n    return (\n        <>\n            <div className=\"upper\">\n                <h1>TODO LIST</h1>\n                <h3>Add Todo Here</h3>\n                <input autoFocus placeholder=\"Enter Todo...\" onChange={e => setTodoInput(e.target.value)} />\n                <input type=\"date\" onChange={e => setDate(e.target.value)} />\n                <input type=\"time\" onChange={e => setTime(e.target.value)} /><br/>\n                <button onClick={handleClick} className=\"btn btn-success\">Add Todo</button>\n            </div>\n\n            <div>\n                <table className=\"table\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Time</th>\n                            <th scope=\"col\">Status</th>\n                            <th scope=\"col\">Delete</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n\n                        {\n                            todoList.map((item) => (\n\n                                <tr key={item.count}>\n                                    <td className=\"bullet\">•</td>\n                                    <td >{item.text}</td>\n                                    <td>{item.date}</td>\n                                    <td>{item.time}</td>\n                                    <td><input type=\"checkbox\" className=\"check\" value={checked} onChange={e=>console.log(e.target.value)}/>{checked?\"Completed\":\"Incomplete\"}</td>\n\n                                    <td style={{cursor:\"pointer\"}} onClick={()=>handleDelete(item.count)} className=\"del\">{item.del}</td>\n                                </tr>\n\n                            ))\n                        }\n\n\n                    </tbody>\n                </table>\n\n\n\n            </div>\n            <button onClick={handleClear} className=\"btn btn-primary\">Clear All</button>\n        </>\n    )\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}