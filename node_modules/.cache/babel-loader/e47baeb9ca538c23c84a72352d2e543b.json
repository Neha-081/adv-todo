{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Git/adv-todo/src/components/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./todo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = () => {\n  _s();\n\n  const [todoInput, setTodoInput] = useState(\"\");\n  const [todoList, setTodoList] = useState([\"neha\"]);\n\n  const handleClick = () => {\n    if (!todoInput) return;\n    setTodoList(prev => prev + todoInput);\n    console.log(todoInput);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Todo Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        autoFocus: true,\n        placeholder: \"Enter Todo...\",\n        onChange: e => setTodoInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todoList.map(item => /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 18\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Todo, \"/d4+mNcZSndryIYxaJkY2nhybnQ=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/home/Desktop/Git/adv-todo/src/components/Todo.jsx"],"names":["React","useState","Todo","todoInput","setTodoInput","todoList","setTodoList","handleClick","prev","console","log","e","target","value","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;;;;AAEA,MAAMC,IAAI,GAAC,MAAI;AAAA;;AACX,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBH,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACI,QAAD,EAAUC,WAAV,IAAuBL,QAAQ,CAAC,CAAC,MAAD,CAAD,CAArC;;AAEA,QAAMM,WAAW,GAAC,MAAI;AAClB,QAAG,CAACJ,SAAJ,EAAe;AACvBG,IAAAA,WAAW,CAACE,IAAI,IAAEA,IAAI,GAACL,SAAZ,CAAX;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACK,GAJD;;AAKA,sBACI;AAAA,4BACA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,SAAS,MAAhB;AAAiB,QAAA,WAAW,EAAC,eAA7B;AAA6C,QAAA,QAAQ,EAAEQ,CAAC,IAAEP,YAAY,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtE;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAEN,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAQA;AAAA,gBAEKF,QAAQ,CAACS,GAAT,CAAaC,IAAI,iBACb;AAAA,kBAAmBA;AAAnB,SAASA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,cADJ;AAFL;AAAA;AAAA;AAAA;AAAA,YARA;AAAA,kBADJ;AAkBH,CA3BD;;GAAMd,I;;KAAAA,I;AA6BN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./todo.css\"\n\nconst Todo=()=>{\n    const [todoInput,setTodoInput]=useState(\"\")\n    const [todoList,setTodoList]=useState([\"neha\"])\n\n    const handleClick=()=>{\n        if(!todoInput) return\nsetTodoList(prev=>prev+todoInput)\nconsole.log(todoInput);\n    }\n    return (\n        <>\n        <div>\n            <h1>TODO LIST</h1>\n            <h3>Add Todo Here</h3>\n            <input autoFocus placeholder=\"Enter Todo...\" onChange={e=>setTodoInput(e.target.value)}/>\n            <button onClick={handleClick}>Add </button>\n        </div>\n\n        <div>\n         {\n             todoList.map(item=>(\n                 <h5 key={item.id}>{item}</h5>\n             ))\n         }\n        </div>\n        </>\n    )\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}